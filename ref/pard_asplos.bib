@online{busybox,
    title = {{BusyBox}},
    url = {http://www.busybox.net/},
    citedate = {2016-05-13},
}

@online{memcached,
    title = {{Memcached}},
    url = {http://memcached.org/},
    citedate = {2016-05-13},
}

@online{OpenStack,
    title = {{OpenStack}},
    url = {http://www.openstack.org/},
    citedate = {2016-05-13},
}

@online{opensparct1,
    title = {{OpenSPARC T1 microprocessor}},
    author = {{Oracle}},
    url = {http://www.oracle.com/technetwork/systems/opensparc/index.html},
    citedate = {2016-05-13},
}


@misc{Gartner_utilization_2010,
    title = {{Gartner says efficient data center design can lead to 300 percent capacity growth in 60 percent less space}},
    howpublished = {\url{http://www.gartner.com/newsroom/id/1472714}},
}

@online{cgroup,
    title = {{CGROUPS}},
    author = {Paul Menage},
    url = {https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt},
    citedate = {2016-05-14},
}

@online{lxc,
    title = {{Linux Containers (LXC)}},
    url = {https://linuxcontainers.org/},
    citedate = {2016-05-14},
}

@online{microsoft_azure_sla,
    title = {Microsoft {Azure} {SLA}},
    author = {{Microsoft}},
    url = {http://azure.microsoft.com/en-us/support/legal/sla/},
}

@misc{hp_cloud_sla,
    title = {{HP} {Cloud} {SLA}},
    author = {{HP}},
    howpublished = {\url{http://www.hpcloud.com/sla/}},
}

@misc{amazon_ec2_sla,
    title = {Amazon {EC2} {SLA}},
    author = {{Amazon}},
    howpublished = {\url{http://aws.amazon.com/ec2/sla/}},
}

@misc{google_speed_wins,
    title = {{Google's Marissa Mayer: Speed wins}},
    howpublished = {\url{http://www.zdnet.com/blog/btl/googles-marissa-mayer-speed-wins/3925}},
}

@online{stream,
    title = {{STREAM: Sustainable Memory Bandwidth in High Performance Computers}},
    url = {http://www.cs.virginia.edu/stream/},
    citedate = {2016-05-13},
}

@online{LDom,
    title = {{Oracle VM Server for SPARC (Logical Domains)}},
    author = {{Oracle}},
    url = {http://www.oracle.com/technetwork/systems/logical-domains/index.html},
    citedate = {2016-05-13},
}

@online{hitachi-lpar,
    title = {{Hitachi Compute Blade With Logical Partitioning Feature}},
    author = {{Hitachi Data Systems}},
    url = {https://www.hds.com/assets/pdf/hitachi-datasheet-compute-blade-logical-partitioning-lpar.pdf},
    citedate = {2016-05-13},
}

@standard{DiffServ-2,
    author = {{IETF}},
    title = {{RFC 2474: Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers}},
    year = {1998},
    url = {http://tools.ietf.org/html/rfc2474},
    citedate = {2016-05-13},
}

@misc{openflow_spec,
    title = {OpenFlow Switch Specification},
    author = {{ONF}},
    howpublished = {\url{https://www.opennetworking.org/sdn-resources/openflow/}},
}

@standard{IntServ,
    author = {{IETF}},
    title = {{RFC 1633: Integrated Services in the Internet Architecture: an Overview}},
    year = {1994},
    url = {http://tools.ietf.org/html/rfc1633},
    citedate = {2016-05-13},
}

@standard{DiffServ,
    author = {{IETF}},
    title = {{RFC 2475: An Architecture for Differentiated Services}},
    year = {1998},
    url = {http://tools.ietf.org/html/rfc2475},
    citedate = {2016-05-13},
}

@misc{multiqueue,
    title = {Intel 82599 10 Gigabit Ethernet Controller: Datasheet},
    howpublished = {\url{http://www.intel.com/content/www/us/en/ethernet-controllers/82599-10-gbe-controller-datasheet.html}},
}

@standard{pcisig_pcie_spec,
    author = {{PCISIG}},
    title = {{PCI Express Base 3.0 Specification}},
    year = {2010},
}

@misc{pcisig_sriov_spec,
    title = {{Single Root I/O Virtualization and Sharing}},
    author = {{PCISIG}},
    howpublished = {\url{http://www.pcisig.com/specifications/iov/single_root/}},
}


@misc{vc709,
    title = {{Xilinx Virtex-7 FPGA VC709 Connectivity Kit}},
    author = {{Xilinx}},
    howpublished = {\url{http://www.xilinx.com/products/boards-and-kits/EK-V7-VC709-CES-G.htm}},
}

@misc{xilinx_vivado,
    title = {{Vivado Design Suite}},
    author = {{Xilinx}},
    howpublished = {\url{http://www.xilinx.com/products/design-tools/vivado/}},
}



@rfc{Nichols:1999:TDS:RFC2638,
 author = {Nichols, K. and Jacobson, V. and Zhang, L.},
 title = {A Two-bit Differentiated Services Architecture for the Internet},
 year = {1999},
 publisher = {RFC Editor},
 address = {United States},
}

@inproceedings{sanchez_vantage:_2011,
    author = {Sanchez, Daniel and Kozyrakis, Christos},
    title = {Vantage: Scalable and Efficient Fine-grain Cache Partitioning},
    booktitle = {Proceedings of the 38th Annual International Symposium on Computer Architecture},
    series = {ISCA '11},
    year = {2011},
    isbn = {978-1-4503-0472-6},
    location = {San Jose, California, USA},
    pages = {57-68},
    numpages = {12},
    //url = {http://doi.acm.org/10.1145/2000064.2000073},
    //doi = {10.1145/2000064.2000073},
    acmid = {2000073},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {cache partitioning, multi-core, qos, shared cache},
} 

@inproceedings{qureshi_utility-based_2006,
    author = {Qureshi, Moinuddin K. and Patt, Yale N.},
    title = {Utility-Based Cache Partitioning: A Low-Overhead, High-Performance, Runtime Mechanism to Partition Shared Caches},
    booktitle = {Proceedings of the 39th Annual IEEE/ACM International Symposium on Microarchitecture},
    series = {MICRO 39},
    year = {2006},
    isbn = {0-7695-2732-9},
    pages = {423--432},
    numpages = {10},
    //url = {http://dx.doi.org/10.1109/MICRO.2006.49},
    //doi = {10.1109/MICRO.2006.49},
    acmid = {1194855},
    publisher = {IEEE Computer Society},
    address = {Washington, DC, USA},
} 

@inproceedings{kasture_ubik:_2014,
    address = {New York, {NY}, {USA}},
    series = {{ASPLOS} '14},
    title = {Ubik: Efficient Cache Sharing with Strict Qos for Latency-critical Workloads},
    isbn = {978-1-4503-2305-5},
    shorttitle = {Ubik},
    //url = {http://doi.acm.org/10.1145/2541940.2541944},
    //doi = {10.1145/2541940.2541944},
    abstract = {Chip-multiprocessors ({CMPs)} must often execute workload mixes with different performance requirements. On one hand, user-facing, latency-critical applications (e.g., web search) need low tail (i.e., worst-case) latencies, often in the millisecond range, and have inherently low utilization. On the other hand, compute-intensive batch applications (e.g., {MapReduce)} only need high long-term average performance. In current {CMPs}, latency-critical and batch applications cannot run concurrently due to interference on shared resources. Unfortunately, prior work on quality of service ({QoS)} in {CMPs} has focused on guaranteeing average performance, not tail latency. In this work, we analyze several latency-critical workloads, and show that guaranteeing average performance is insufficient to maintain low tail latency, because microarchitectural resources with state, such as caches or cores, exert inertia on instantaneous workload performance. Last-level caches impart the highest inertia, as workloads take tens of milliseconds to warm them up. When left unmanaged, or when managed with conventional {QoS} frameworks, shared last-level caches degrade tail latency significantly. Instead, we propose Ubik, a dynamic partitioning technique that predicts and exploits the transient behavior of latency-critical workloads to maintain their tail latency while maximizing the cache space available to batch applications. Using extensive simulations, we show that, while conventional {QoS} frameworks degrade tail latency by up to 2.3x, Ubik simultaneously maintains the tail latency of latency-critical workloads and significantly improves the performance of batch applications.},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems},
    publisher = {{ACM}},
    author = {Kasture, Harshad and Sanchez, Daniel},
    year = {2014},
    keywords = {cache partitioning, interference, isolation, multicore, quality of service, resource management, tail latency},
    pages = {729{\textendash}742},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\IH7H25CT\Kasture ? Sanchez - 2014 - Ubik Efficient Cache Sharing with Strict Qos for .pdf:application/pdf}
}

@inproceedings{kim_thread_2010,
    title = {Thread cluster memory scheduling: Exploiting differences in memory access behavior},
    shorttitle = {Thread cluster memory scheduling},
    //url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5695526},
    urldate = {2014-04-21},
    booktitle = {Microarchitecture ({MICRO)}, 2010 43rd Annual {IEEE/ACM} International Symposium on},
    publisher = {{IEEE}},
    author = {Kim, Yoongu and Papamichael, Michael and Mutlu, Onur and Harchol-Balter, Mor},
    year = {2010},
    pages = {65{\textendash}76}
}

@inproceedings{sanchez_zcache:_2010,
    address = {Washington, {DC}, {USA}},
    series = {{MICRO} '43},
    title = {The {ZCache:} Decoupling Ways and Associativity},
    isbn = {978-0-7695-4299-7},
    shorttitle = {The {ZCache}},
    //url = {http://dx.doi.org/10.1109/MICRO.2010.20},
    //doi = {10.1109/MICRO.2010.20},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 2010 43rd Annual {IEEE/ACM} International Symposium on Microarchitecture},
    publisher = {{IEEE} Computer Society},
    author = {Sanchez, Daniel and Kozyrakis, Christos},
    year = {2010},
    keywords = {associativity, cache, energy efficiency, multi-core, performance},
    pages = {187{\textendash}198},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\SVX79QCN\Sanchez ? Kozyrakis - 2010 - The ZCache Decoupling Ways and Associativity.pdf:application/pdf}
}

@inproceedings{banga_resource_1999,
    title = {Resource containers: A new facility for resource management in server systems},
    volume = {99},
    shorttitle = {Resource containers},
    //url = {https://www.usenix.org/events/osdi99/full_papers/banga/banga.pdf},
    urldate = {2014-04-23},
    booktitle = {{OSDI}},
    author = {Banga, Gaurav and Druschel, Peter and Mogul, Jeffrey C.},
    year = {1999},
    pages = {45{\textendash}58}
}

@inproceedings{tang_reqos:_2013,
    address = {New York, {NY}, {USA}},
    series = {{ASPLOS} '13},
    title = {{ReQoS:} Reactive {Static/Dynamic} Compilation for {QoS} in Warehouse Scale Computers},
    isbn = {978-1-4503-1870-9},
    shorttitle = {{ReQoS}},
    //url = {http://doi.acm.org/10.1145/2451116.2451126},
    //doi = {10.1145/2451116.2451126},
    abstract = {As multicore processors with expanding core counts continue to dominate the server market, the overall utilization of the class of datacenters known as warehouse scale computers ({WSCs)} depends heavily on colocation of multiple workloads on each server to take advantage of the computational power provided by modern processors. However, many of the applications running in {WSCs}, such as websearch, are user-facing and have quality of service ({QoS)} requirements. When multiple applications are co-located on a multicore machine, contention for shared memory resources threatens application {QoS} as severe cross-core performance interference may occur. {WSC} operators are left with two options: either disregard {QoS} to maximize {WSC} utilization, or disallow the co-location of high-priority user-facing applications with other applications, resulting in low machine utilization and millions of dollars wasted. This paper presents {ReQoS}, a static/dynamic compilation approach that enables low-priority applications to adaptively manipulate their own contentiousness to ensure the {QoS} of high-priority co-runners. {ReQoS} is composed of a profile guided compilation technique that identifies and inserts markers in contentious code regions in low-priority applications, and a lightweight runtime that monitors the {QoS} of high-priority applications and reactively reduces the pressure low-priority applications generate to the memory subsystem when cross-core interference is detected. In this work, we show that {ReQoS} can accurately diagnose contention and significantly reduce performance interference to ensure application {QoS.} Applying {ReQoS} to {SPEC2006} and {SmashBench} workloads on real multicore machines, we are able to improve machine utilization by more than 70\% in many cases, and more than 50\% on average, while enforcing a 90\% {QoS} threshold. We are also able to improve the energy efficiency of modern multicore machines by 47\% on average over a policy of disallowing co-locations.},
    urldate = {2014-03-21},
    booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
    publisher = {{ACM}},
    author = {Tang, Lingjia and Mars, Jason and Wang, Wei and Dey, Tanima and Soffa, Mary Lou},
    year = {2013},
    keywords = {compiler, contention, cross-core interference, datacenter, dynamic techniques, multicore, online adaptation, quality of service, runtime systems, warehouse scale computers},
    pages = {89{\textendash}100}
}

@inproceedings{muralidhara_reducing_2011,
    author = {Muralidhara, Sai Prashanth and Subramanian, Lavanya and Mutlu, Onur and Kandemir, Mahmut and Moscibroda, Thomas},
    title = {Reducing Memory Interference in Multicore Systems via Application-aware Memory Channel Partitioning},
    booktitle = {Proceedings of the 44th Annual IEEE/ACM International Symposium on Microarchitecture},
    series = {MICRO-44},
    year = {2011},
    isbn = {978-1-4503-1053-6},
    location = {Porto Alegre, Brazil},
    pages = {374--385},
    numpages = {12},
    //url = {http://doi.acm.org/10.1145/2155620.2155664},
    //doi = {10.1145/2155620.2155664},
    acmid = {2155664},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {data allocation, interference, main memory, memory controllers, memory scheduling, multicore},
} 

@inproceedings{kozyrakis_reconciling_2014,
    title = {Reconciling High Server Utilization and Sub-millisecond Quality-of-Service},
    //url = {http://xenon.stanford.edu/~leverich/papers/2014.mutilate.eurosys.pdf},
    urldate = {2014-04-21},
    booktitle = {Proceedings of the 2014 {EuroSys} Conference, Amsterdam, Nethelands},
    author = {Leverich, Jacob and Kozyrakis, Christos},
    year = {2014}
}

@inproceedings{herdrich_rate-based_2009,
    title = {Rate-based {QoS} techniques for cache/memory in {CMP} platforms},
    //url = {http://dl.acm.org/citation.cfm?id=1542342},
    urldate = {2014-04-23},
    booktitle = {Proceedings of the 23rd international conference on Supercomputing},
    publisher = {{ACM}},
    author = {Herdrich, Andrew and Illikkal, Ramesh and Iyer, Ravi and Newell, Don and Chadha, Vineet and Moses, Jaideep},
    year = {2009},
    pages = {479{\textendash}488}
}

@inproceedings{delimitrou_quasar:_2014,
    address = {New York, {NY}, {USA}},
    series = {{ASPLOS} '14},
    title = {Quasar: Resource-efficient and {QoS-aware} Cluster Management},
    isbn = {978-1-4503-2305-5},
    shorttitle = {Quasar},
    //url = {http://doi.acm.org/10.1145/2541940.2541941},
    //doi = {10.1145/2541940.2541941},
    abstract = {Cloud computing promises flexibility and high performance for users and high cost-efficiency for operators. Nevertheless, most cloud facilities operate at very low utilization, hurting both cost effectiveness and future scalability. We present Quasar, a cluster management system that increases resource utilization while providing consistently high application performance. Quasar employs three techniques. First, it does not rely on resource reservations, which lead to underutilization as users do not necessarily understand workload dynamics and physical resource requirements of complex codebases. Instead, users express performance constraints for each workload, letting Quasar determine the right amount of resources to meet these constraints at any point. Second, Quasar uses classification techniques to quickly and accurately determine the impact of the amount of resources (scale-out and scale-up), type of resources, and interference on performance for each workload and dataset. Third, it uses the classification results to jointly perform resource allocation and assignment, quickly exploring the large space of options for an efficient way to pack workloads on available resources. Quasar monitors workload performance and adjusts resource allocation and assignment when needed. We evaluate Quasar over a wide range of workload scenarios, including combinations of distributed analytics frameworks and low-latency, stateful services, both on a local cluster and a cluster of dedicated {EC2} servers. At steady state, Quasar improves resource utilization by 47\% in the 200-server {EC2} cluster, while meeting performance constraints for workloads of all types.},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems},
    publisher = {{ACM}},
    author = {Delimitrou, Christina and Kozyrakis, Christos},
    year = {2014},
    keywords = {cloud computing, cluster management, datacenters, quality of service, resource allocation and assignment, resource efficiency},
    pages = {127{\textendash}144}
}

@inproceedings{iyer_qos_2007,
    address = {New York, {NY}, {USA}},
    series = {{SIGMETRICS} '07},
    title = {{QoS} Policies and Architecture for {Cache/Memory} in {CMP} Platforms},
    isbn = {978-1-59593-639-4},
    //url = {http://doi.acm.org/10.1145/1254882.1254886},
    //doi = {10.1145/1254882.1254886},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 2007 {ACM} {SIGMETRICS} International Conference on Measurement and Modeling of Computer Systems},
    publisher = {{ACM}},
    author = {Iyer, Ravi and Zhao, Li and Guo, Fei and Illikkal, Ramesh and Makineni, Srihari and Newell, Don and Solihin, Yan and Hsu, Lisa and Reinhardt, Steve},
    year = {2007},
    keywords = {cache/memory, {CMP}, performance, {QoS}, quality of service, resource sharing priniciples, service level agreements},
    pages = {25{\textendash}36},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\NZV9PGH8\Iyer ?. - 2007 - QoS Policies and Architecture for CacheMemory in .pdf:application/pdf}
}

@inproceedings{shue_performance_2012,
    address = {Berkeley, {CA}, {USA}},
    series = {{OSDI'12}},
    title = {Performance Isolation and Fairness for Multi-tenant Cloud Storage},
    isbn = {978-1-931971-96-6},
    //url = {http://dl.acm.org/citation.cfm?id=2387880.2387914},
    abstract = {Shared storage services enjoy wide adoption in commercial clouds. But most systems today provide weak performance isolation and fairness between tenants, if at all. Misbehaving or high-demand tenants can overload the shared service and disrupt other well-behaved tenants, leading to unpredictable performance and violating {SLAs.} This paper presents Pisces, a system for achieving datacenter-wide per-tenant performance isolation and fairness in shared key-value storage. Today's approaches for multi-tenant resource allocation are based either on per-{VM} allocations or hard rate limits that assume uniform workloads to achieve high utilization. Pisces achieves per-tenant weighted fair shares (or minimal rates) of the aggregate resources of the shared service, even when different tenants' partitions are co-located and when demand for different partitions is skewed, time-varying, or bottlenecked by different server resources. Pisces does so by decomposing the fair sharing problem into a combination of four complementary mechanisms--partition placement, weight allocation, replica selection, and weighted fair queuing--that operate on different time-scales and combine to provide system-wide max-min fairness. An evaluation of our Pisces storage prototype achieves nearly ideal (0.99 Min-Max Ratio) weighted fair sharing, strong performance isolation, and robustness to skew and shifts in tenant demand. These properties are achieved with minimal overhead ({\textless}3\%), even when running at high utilization (more than 400,000 requests/second/server for {10B} requests).},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 10th {USENIX} Conference on Operating Systems Design and Implementation},
    publisher = {{USENIX} Association},
    author = {Shue, David and Freedman, Michael J. and Shaikh, Anees},
    year = {2012},
    pages = {349{\textendash}362}
}

@inproceedings{delimitrou_paragon:_2013,
    author = {Delimitrou, Christina and Kozyrakis, Christos},
    title = {Paragon: QoS-aware Scheduling for Heterogeneous Datacenters},
    booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
    series = {ASPLOS '13},
    year = {2013},
    isbn = {978-1-4503-1870-9},
    location = {Houston, Texas, USA},
    pages = {77--88},
    numpages = {12},
    //url = {http://doi.acm.org/10.1145/2451116.2451125},
    //doi = {10.1145/2451116.2451125},
    acmid = {2451125},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {cloud computing, datacenter, heterogeneity, interference, qos, scheduling},
} 

@inproceedings{keller_nohype:_2010,
    address = {New York, {NY}, {USA}},
    series = {{ISCA} '10},
    title = {{NoHype:} Virtualized Cloud Infrastructure Without the Virtualization},
    isbn = {978-1-4503-0053-7},
    shorttitle = {{NoHype}},
    //url = {http://doi.acm.org/10.1145/1815961.1816010},
    //doi = {10.1145/1815961.1816010},
    abstract = {Cloud computing is a disruptive trend that is changing the way we use computers. The key underlying technology in cloud infrastructures is virtualization -- so much so that many consider virtualization to be one of the key features rather than simply an implementation detail. Unfortunately, the use of virtualization is the source of a significant security concern. Because multiple virtual machines run on the same server and since the virtualization layer plays a considerable role in the operation of a virtual machine, a malicious party has the opportunity to attack the virtualization layer. A successful attack would give the malicious party control over the all-powerful virtualization layer, potentially compromising the confidentiality and integrity of the software and data of any virtual machine. In this paper we propose removing the virtualization layer, while retaining the key features enabled by virtualization. Our {NoHype} architecture, named to indicate the removal of the hypervisor, addresses each of the key roles of the virtualization layer: arbitrating access to {CPU}, memory, and {I/O} devices, acting as a network device (e.g., Ethernet switch), and managing the starting and stopping of guest virtual machines. Additionally, we show that our {NoHype} architecture may indeed be "no hype" since nearly all of the needed features to realize the {NoHype} architecture are currently available as hardware extensions to processors and {I/O} devices.},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 37th Annual International Symposium on Computer Architecture},
    publisher = {{ACM}},
    author = {Keller, Eric and Szefer, Jakub and Rexford, Jennifer and Lee, Ruby B.},
    year = {2010},
    keywords = {cloud computing, hypervisor, many-core, multi-core, security, system architecture, virtualization},
    pages = {350{\textendash}361},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\AUCJU473\Keller ?. - 2010 - NoHype Virtualized Cloud Infrastructure Without t.pdf:application/pdf}
}

@inproceedings{sharifi_mete:_2011,
    title = {{METE:} meeting end-to-end {QoS} in multicores through system-wide resource management},
    shorttitle = {{METE}},
    //url = {http://dl.acm.org/citation.cfm?id=1993747},
    urldate = {2014-04-21},
    booktitle = {Proceedings of the {ACM} {SIGMETRICS} joint international conference on Measurement and modeling of computer systems},
    publisher = {{ACM}},
    author = {Sharifi, Akbar and Srikantaiah, Shekhar and Mishra, Asit K. and Kandemir, Mahmut and Das, Chita R.},
    year = {2011},
    pages = {13{\textendash}24}
}

@inproceedings{thereska_ioflow:_2013,
    address = {New York, {NY}, {USA}},
    series = {{SOSP} '13},
    title = {{IOFlow:} A Software-defined Storage Architecture},
    isbn = {978-1-4503-2388-8},
    shorttitle = {{IOFlow}},
    //url = {http://doi.acm.org/10.1145/2517349.2522723},
    //doi = {10.1145/2517349.2522723},
    abstract = {In data centers, the {IO} path to storage is long and complex. It comprises many layers or "stages" with opaque interfaces between them. This makes it hard to enforce end-to-end policies that dictate a storage {IO} flow's performance (e.g., guarantee a tenant's {IO} bandwidth) and routing (e.g., route an untrusted {VM's} traffic through a sanitization middlebox). These policies require {IO} differentiation along the flow path and global visibility at the control plane. We design {IOFlow}, an architecture that uses a logically centralized control plane to enable high-level flow policies. {IOFlow} adds a queuing abstraction at data-plane stages and exposes this to the controller. The controller can then translate policies into queuing rules at individual stages. It can also choose among multiple stages for policy enforcement. We have built the queue and control functionality at two key {OS} stages-- the storage drivers in the hypervisor and the storage server. {IOFlow} does not require application or {VM} changes, a key strength for deployability. We have deployed a prototype across a small testbed with a 40 Gbps network and storage devices. We have built control applications that enable a broad class of multi-point flow policies that are hard to achieve today.},
    urldate = {2014-03-20},
    booktitle = {Proceedings of the Twenty-Fourth {ACM} Symposium on Operating Systems Principles},
    publisher = {{ACM}},
    author = {Thereska, Eno and Ballani, Hitesh and {O'Shea}, Greg and Karagiannis, Thomas and Rowstron, Antony and Talpey, Tom and Black, Richard and Zhu, Timothy},
    year = {2013},
    pages = {182{\textendash}196}
}

@article{mars_heterogeneity_2011,
    title = {Heterogeneity in {\textquotedblleft}homogeneous{\textquotedblright} warehouse-scale computers: A performance opportunity},
    volume = {10},
    shorttitle = {Heterogeneity in {\textquotedblleft}homogeneous{\textquotedblright} warehouse-scale computers},
    //url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5887296},
    number = {2},
    urldate = {2014-04-30},
    journal = {Computer Architecture Letters},
    author = {Mars, Jason and Tang, Lingjia and Hundt, Robert},
    year = {2011},
    pages = {29{\textendash}32}
}

@article{li_dynamic_2012,
    title = {Dynamic {QoS} Management for Chip Multiprocessors},
    volume = {9},
    issn = {1544-3566},
    //url = {http://doi.acm.org/10.1145/2355585.2355590},
    //doi = {10.1145/2355585.2355590},
    number = {3},
    urldate = {2014-04-30},
    journal = {{ACM} Trans. Archit. Code Optim.},
    author = {Li, Bin and Peh, Li Shiuan and Zhao, Li and Iyer, Ravi},
    month = {oct},
    year = {2012},
    keywords = {cache, joint resource management, network-on-chip({NoC)}, quality-of-service({QoS)}},
    pages = {17:1{\textendash}17:29},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\GZ4SZ7KA\Li ?. - 2012 - Dynamic QoS Management for Chip Multiprocessors.pdf:application/pdf}
}

@inproceedings{mesnier_differentiated_2011,
    address = {New York, {NY}, {USA}},
    series = {{SOSP} '11},
    title = {Differentiated Storage Services},
    isbn = {978-1-4503-0977-6},
    //url = {http://doi.acm.org/10.1145/2043556.2043563},
    //doi = {10.1145/2043556.2043563},
    abstract = {We propose an {I/O} classification architecture to close the widening semantic gap between computer systems and storage systems. By classifying {I/O}, a computer system can request that different classes of data be handled with different storage system policies. Specifically, when a storage system is first initialized, we assign performance policies to predefined classes, such as the filesystem journal. Then, online, we include a classifier with each {I/O} command (e.g., {SCSI)}, thereby allowing the storage system to enforce the associated policy for each {I/O} that it receives. Our immediate application is caching. We present filesystem prototypes and a database proof-of-concept that classify all disk {I/O} --- with very little modification to the filesystem, database, and operating system. We associate caching policies with various classes (e.g., large files shall be evicted before metadata and small files), and we show that end-to-end file system performance can be improved by over a factor of two, relative to conventional caches like {LRU.} And caching is simply one of many possible applications. As part of our ongoing work, we are exploring other classes, policies and storage system mechanisms that can be used to improve end-to-end performance, reliability and security.},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the Twenty-Third {ACM} Symposium on Operating Systems Principles},
    publisher = {{ACM}},
    author = {Mesnier, Michael and Chen, Feng and Luo, Tian and Akers, Jason B.},
    year = {2011},
    keywords = {caching, classification, quality of service, solid-state storage},
    pages = {57{\textendash}70},
    file = {ACM Full Text PDF:C:\Users\lenovo\AppData\Roaming\Zotero\Zotero\Profiles\q2u69abx.default\zotero\storage\BUNHMK52\Mesnier ?. - 2011 - Differentiated Storage Services.pdf:application/pdf}
}

@inproceedings{iyer_cqos:_2004,
    title = {{CQoS:} a framework for enabling {QoS} in shared caches of {CMP} platforms},
    shorttitle = {{CQoS}},
    //url = {http://dl.acm.org/citation.cfm?id=1006246},
    urldate = {2014-04-21},
    booktitle = {Proceedings of the 18th annual international conference on Supercomputing},
    publisher = {{ACM}},
    author = {Iyer, Ravi},
    year = {2004},
    pages = {257{\textendash}266}
}

@inproceedings{zhang_cpi_2013,
    title = {{CPI} 2: {CPU} performance isolation for shared compute clusters},
    shorttitle = {{CPI} 2},
    //url = {http://dl.acm.org/citation.cfm?id=2465388},
    urldate = {2014-04-23},
    booktitle = {Proceedings of the 8th {ACM} European Conference on Computer Systems},
    publisher = {{ACM}},
    author = {Zhang, Xiao and Tune, Eric and Hagmann, Robert and Jnagal, Rohit and Gokhale, Vrigo and Wilkes, John},
    year = {2013},
    pages = {379{\textendash}391}
}

@article{li_coqos:_2011,
    title = {{CoQoS:} Coordinating {QoS-aware} shared resources in {NoC-based} {SoCs}},
    volume = {71},
    shorttitle = {{CoQoS}},
    //url = {http://www.sciencedirect.com/science/article/pii/S074373151000211X},
    number = {5},
    urldate = {2014-04-30},
    journal = {Journal of Parallel and Distributed Computing},
    author = {Li, Bin and Zhao, Li and Iyer, Ravi and Peh, Li Shiuan and Leddige, Michael and Espig, Michael and Lee, Seung Eun and Newell, Donald},
    year = {2011},
    pages = {700{\textendash}713}
}

@inproceedings{mars_bubble-up:_2011,
    author = {Mars, Jason and Tang, Lingjia and Hundt, Robert and Skadron, Kevin and Soffa, Mary Lou},
    title = {Bubble-Up: Increasing Utilization in Modern Warehouse Scale Computers via Sensible Co-locations},
    booktitle = {Proceedings of the 44th Annual IEEE/ACM International Symposium on Microarchitecture},
    series = {MICRO-44},
    year = {2011},
    isbn = {978-1-4503-1053-6},
    location = {Porto Alegre, Brazil},
    pages = {248--259},
    numpages = {12},
    //url = {http://doi.acm.org/10.1145/2155620.2155650},
    //doi = {10.1145/2155620.2155650},
    acmid = {2155650},
    publisher = {ACM},
    address = {New York, NY, USA},
} 

@inproceedings{yang_bubble-flux:_2013,
    author = {Yang, Hailong and Breslow, Alex and Mars, Jason and Tang, Lingjia},
    title = {Bubble-flux: Precise Online QoS Management for Increased Utilization in Warehouse Scale Computers},
    booktitle = {Proceedings of the 40th Annual International Symposium on Computer Architecture},
    series = {ISCA '13},
    year = {2013},
    isbn = {978-1-4503-2079-5},
    location = {Tel-Aviv, Israel},
    pages = {607--618},
    numpages = {12},
    //url = {http://doi.acm.org/10.1145/2485922.2485974},
    //doi = {10.1145/2485922.2485974},
    acmid = {2485974},
    publisher = {ACM},
    address = {New York, NY, USA},
}

@inproceedings{liu_software_2012,
   author = {Liu, Lei and Cui, Zehan and Xing, Mingjie and Bao, Yungang and Chen, Mingyu and Wu, Chengyong},
   title = {A Software Memory Partition Approach for Eliminating Bank-level Interference in Multicore Systems},
   booktitle = {Proceedings of the 21st International Conference on Parallel Architectures and Compilation Techniques},
   series = {PACT '12},
   year = {2012},
   isbn = {978-1-4503-1182-3},
   location = {Minneapolis, Minnesota, USA},
   pages = {367--376},
   numpages = {10},
   //url = {http://doi.acm.org/10.1145/2370816.2370869},
   //doi = {10.1145/2370816.2370869},
   acmid = {2370869},
   publisher = {ACM},
   address = {New York, NY, USA},
   keywords = {bank, data allocation, interference, main memory, memory scheduling, multicore, partition},
} 

@book{intel_introduction_2009,
    title = {An Introduction to the IntelÂ® {QuickPath} Interconnect},
    author = {{Intel}},
    month = {jan},
    year = {2009}
}

@article{barroso_datacenter_2013,
    title = {The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines},
    volume = {8},
    shorttitle = {The Datacenter as a Computer},
    //url = {http://www.morganclaypool.com/doi/abs/10.2200/S00516ED2V01Y201306CAC024},
    number = {3},
    urldate = {2014-04-01},
    journal = {Synthesis Lectures on Computer Architecture},
    author = {Barroso, Luiz Andre and Clidaras, Jimmy and Holzle, Urs},
    year = {2013},
    pages = {1-154},
    file = {[PDF] from freebsd.org:F:\majiuyue\Application Data\Zotero\Zotero\Profiles\pn8lcmdd.default\zotero\storage\3VHV2C5P\Barroso µÈ. - 2013 - The Datacenter as a Computer An Introduction to t.pdf:application/pdf;Snapshot:F:\majiuyue\Application Data\Zotero\Zotero\Profiles\pn8lcmdd.default\zotero\storage\4ZRGZQWQ\cookieAbsent.html:text/html}
}


@article{barroso_datacenter_2009,
    title = {The datacenter as a computer: {An} introduction to the design of warehouse-scale machines},
    volume = {4},
    shorttitle = {The datacenter as a computer},
    //url = {http://www.morganclaypool.com/doi/abs/10.2200/s00193ed1v01y200905cac006},
    number = {1},
    urldate = {2014-04-21},
    journal = {Synthesis lectures on computer architecture},
    author = {Barroso, Luiz André and Hölzle, Urs},
    year = {2009},
    pages = {1--108}
}

@inproceedings{mutlu_stall-time_2007,
    author = {Mutlu, Onur and Moscibroda, Thomas},
    title = {Stall-Time Fair Memory Access Scheduling for Chip Multiprocessors},
    booktitle = {Proceedings of the 40th Annual IEEE/ACM International Symposium on Microarchitecture},
    series = {MICRO 40},
    year = {2007},
    isbn = {0-7695-3047-8},
    pages = {146--160},
    numpages = {15},
    //url = {http://dx.doi.org/10.1109/MICRO.2007.40},
    //doi = {10.1109/MICRO.2007.40},
    acmid = {1331715},
    publisher = {IEEE Computer Society},
    address = {Washington, DC, USA},
} 

@inproceedings{dean_achieving_2012,
    title = {Achieving rapid response times in large online services},
    //url = {http://www.webusability.cn/wp-content/uploads/2012/04/fast-reponse-time-large-fanout-online-service.pdf},
    urldate = {2014-04-16},
    booktitle = {Berkeley {AMPLab} Cloud Seminar},
    author = {Dean, Jeff},
    year = {2012},
    file = {[PDF] from webusability.cn:F:\majiuyue\Application Data\Zotero\Zotero\Profiles\pn8lcmdd.default\zotero\storage\PM85SAIW\Dean - 2012 - Achieving rapid response times in large online ser.pdf:application/pdf}
}

@inproceedings{mars_directly_2011,
    address = {New York, {NY}, {USA}},
    series = {{HiPEAC} '11},
    title = {Directly Characterizing Cross Core Interference Through Contention Synthesis},
    isbn = {978-1-4503-0241-8},
    //url = {http://doi.acm.org/10.1145/1944862.1944887},
    //doi = {10.1145/1944862.1944887},
    abstract = {In this paper, we present a direct methodology and framework for the measurement and characterization of an application's cross-core interference sensitivity on multicore microarchitectures. While prior works use indirect indicators, such as last level cache miss rate, to infer an application's cross-core interference sensitivity, our approach is direct, in that it characterizes the application's cross-core interference sensitivity using the performance impact due to actual contention. Our methodology and framework, the Cross-core interference Profiling Environment, or {CiPE}, is composed of a lightweight runtime environment on which a host application runs, along with a carefully designed contention synthesis engine that executes on a neighboring core. {CiPE} manipulates the co-running contention synthesis engine, while monitoring and analyzing the resulting dynamic impact on the host application. {CiPE} is able to characterize the cross-core interference sensitivity of the entire application, its individual phases, or source level code regions. To demonstrate the effectiveness of {CiPE}, we use {CiPE} characterizations to address two pressing problems. First, we use {CiPE} characterizations to perform contention conscious batch scheduling that minimizes cross-core interference, resulting in a 12\% performance improvment on average when applied to the {SPEC2006} benchmark suite, and beyond 20\% in the case of mcf and omnetpp. Second, we use {CiPE} to design a performance analysis tool that is capable identifying contentious bottlenecks in application code.},
    urldate = {2014-03-26},
    booktitle = {Proceedings of the 6th International Conference on High Performance and Embedded Architectures and Compilers},
    publisher = {{ACM}},
    author = {Mars, Jason and Tang, Lingjia and Soffa, Mary Lou},
    year = {2011},
    keywords = {contention, cross-core interference, dynamic analysis, execution runtimes, multicore, profiling framework, program understanding},
    pages = {167-176}
}


@inproceedings{mars_contention_2010,
    address = {New York, {NY}, {USA}},
    series = {{CGO} '10},
    title = {Contention Aware Execution: Online Contention Detection and Response},
    isbn = {978-1-60558-635-9},
    shorttitle = {Contention Aware Execution},
    //url = {http://doi.acm.org/10.1145/1772954.1772991},
    //doi = {10.1145/1772954.1772991},
    urldate = {2014-03-26},
    booktitle = {Proceedings of the 8th Annual {IEEE/ACM} International Symposium on Code Generation and Optimization},
    publisher = {{ACM}},
    author = {Mars, Jason and Vachharajani, Neil and Hundt, Robert and Soffa, Mary Lou},
    year = {2010},
    keywords = {contention, cross-core interference, dynamic techniques, execution runtimes, multicore, online adaptation},
    pages = {257-265}
}


@inproceedings{mutlu_parallelism-aware_2008,
     author = {Mutlu, Onur and Moscibroda, Thomas},
     title = {Parallelism-Aware Batch Scheduling: Enhancing Both Performance and Fairness of Shared DRAM Systems},
     booktitle = {Proceedings of the 35th Annual International Symposium on Computer Architecture},
     series = {ISCA '08},
     year = {2008},
     isbn = {978-0-7695-3174-8},
     pages = {63--74},
     numpages = {12},
     //url = {http://dx.doi.org/10.1109/ISCA.2008.7},
     //doi = {10.1109/ISCA.2008.7},
     acmid = {1382128},
     publisher = {IEEE Computer Society},
     address = {Washington, DC, USA},
     keywords = {Memory systems, quality of service, multi-core systems, chip multiprocessors, DRAM systems, fairness, memory scheduling, memory-level parallelism},
} 


}


@inproceedings{kim_atlas:_2010,
    title = {{ATLAS:} A scalable and high-performance scheduling algorithm for multiple memory controllers},
    shorttitle = {{ATLAS}},
    //url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5416658},
    urldate = {2014-04-17},
    booktitle = {High Performance Computer Architecture ({HPCA)}, 2010 {IEEE} 16th International Symposium on},
    publisher = {{IEEE}},
    author = {Kim, Yoongu and Han, Dongsu and Mutlu, Onur and Harchol-Balter, Mor},
    year = {2010},
    pages = {1-12}
}

@inproceedings{cook_hardware_2013,
    address = {New York, {NY}, {USA}},
    series = {{ISCA} '13},
    title = {A Hardware Evaluation of Cache Partitioning to Improve Utilization and Energy-efficiency While Preserving Responsiveness},
    isbn = {978-1-4503-2079-5},
    //url = {http://doi.acm.org/10.1145/2485922.2485949},
    //doi = {10.1145/2485922.2485949},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 40th Annual International Symposium on Computer Architecture},
    publisher = {{ACM}},
    author = {Cook, Henry and Moreto, Miquel and Bird, Sarah and Dao, Khanh and Patterson, David A. and Asanovic, Krste},
    year = {2013},
    pages = {308-319}
}


@inproceedings{bojnordi_pardis:_2012,
    address = {Washington, {DC}, {USA}},
    series = {{ISCA} '12},
    title = {{PARDIS:} A Programmable Memory Controller for the {DDRx} Interfacing Standards},
    isbn = {978-1-4503-1642-2},
    shorttitle = {{PARDIS}},
    //url = {http://dl.acm.org/citation.cfm?id=2337159.2337162},
    urldate = {2014-04-30},
    booktitle = {Proceedings of the 39th Annual International Symposium on Computer Architecture},
    publisher = {{IEEE} Computer Society},
    author = {Bojnordi, Mahdi Nazm and Ipek, Engin},
    year = {2012},
    pages = {13-24}
}


@article{binkert_gem5_2011,
    title = {The Gem5 Simulator},
    volume = {39},
    issn = {0163-5964},
    //url = {http://doi.acm.org/10.1145/2024716.2024718},
    //doi = {10.1145/2024716.2024718},
    abstract = {The gem5 simulation infrastructure is the merger of the best aspects of the M5 [4] and {GEMS} [9] simulators. M5 provides a highly configurable simulation framework, multiple {ISAs}, and diverse {CPU} models. {GEMS} complements these features with a detailed and exible memory system, including support for multiple cache coherence protocols and interconnect models. Currently, gem5 supports most commercial {ISAs} ({ARM}, {ALPHA}, {MIPS}, Power, {SPARC}, and x86), including booting Linux on three of them ({ARM}, {ALPHA}, and x86). The project is the result of the combined efforts of many academic and industrial institutions, including {AMD}, {ARM}, {HP}, {MIPS}, Princeton, {MIT}, and the Universities of Michigan, Texas, and Wisconsin. Over the past ten years, M5 and {GEMS} have been used in hundreds of publications and have been downloaded tens of thousands of times. The high level of collaboration on the gem5 project, combined with the previous success of the component parts and a liberal {BSD-like} license, make gem5 a valuable full-system simulation tool.},
    number = {2},
    urldate = {2014-04-29},
    journal = {{SIGARCH} Comput. Archit. News},
    author = {Binkert, Nathan and Beckmann, Bradford and Black, Gabriel and Reinhardt, Steven K. and Saidi, Ali and Basu, Arkaprava and Hestness, Joel and Hower, Derek R. and Krishna, Tushar and Sardashti, Somayeh and Sen, Rathijit and Sewell, Korey and Shoaib, Muhammad and Vaish, Nilay and Hill, Mark D. and Wood, David A.},
    month = {aug},
    year = {2011},
    pages = {1-7},
    file = {ACM Full Text PDF:F:\majiuyue\Application Data\Zotero\Zotero\Profiles\pn8lcmdd.default\zotero\storage\R8F8G6KB\Binkert µÈ. - 2011 - The Gem5 Simulator.pdf:application/pdf}
}


@article{storer_data_1982,
    title = {Data Compression via Textual Substitution},
    volume = {29},
    issn = {0004-5411},
    //url = {http://doi.acm.org/10.1145/322344.322346},
    //doi = {10.1145/322344.322346},
    number = {4},
    urldate = {2014-05-01},
    journal = {J. {ACM}},
    author = {Storer, James A. and Szymanski, Thomas G.},
    month = {oct},
    year = {1982},
    pages = {928-951},
    file = {ACM Full Text PDF:F:\majiuyue\Application Data\Zotero\Zotero\Profiles\pn8lcmdd.default\zotero\storage\4A9Q8M8V\Storer ºÍ Szymanski - 1982 - Data Compression via Textual Substitution.pdf:application/pdf}
}

@article{cpu2006,
    title = {{SPEC} {CPU2006} Benchmark Descriptions},
    volume = {34},
    issn = {0163-5964},
    //url = {http://doi.acm.org/10.1145/1186736.1186737},
    //doi = {10.1145/1186736.1186737},
    abstract = {On August 24, 2006, the Standard Performance Evaluation Corporation ({SPEC)} announced {CPU2006} [2], which replaces {CPU2000.} The {SPEC} {CPU} benchmarks are widely used in both industry and academia [3].},
    number = {4},
    urldate = {2014-05-01},
    journal = {{SIGARCH} Comput. Archit. News},
    author = {Henning, John L.},
    month = {sep},
    year = {2006},
    pages = {1-17}
}



@article{tremaine_ibm_2001,
    title = {{IBM} Memory Expansion Technology ({MXT)}},
    volume = {45},
    issn = {0018-8646},
    //doi = {10.1147/rd.452.0271},
    number = {2},
    journal = {{IBM} Journal of Research and Development},
    author = {Tremaine, R. B. and Franaszek, {P.A.} and Robinson, {J.T.} and Schulz, {C.O.} and Smith, {T.B.} and Wazlowski, {M.E.} and Bland, P. M.},
    month = {mar},
    year = {2001},
    pages = {271--285}
}


@inproceedings{kambadur_measuring_2012,
     author = {Kambadur, Melanie and Moseley, Tipp and Hank, Rick and Kim, Martha A.},
     title = {Measuring Interference Between Live Datacenter Applications},
     booktitle = {Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis},
     series = {SC '12},
     year = {2012},
     isbn = {978-1-4673-0804-5},
     location = {Salt Lake City, Utah},
     pages = {51:1--51:12},
     articleno = {51},
     numpages = {12},
     //url = {http://dl.acm.org/citation.cfm?id=2388996.2389066},
     acmid = {2389066},
     publisher = {IEEE Computer Society Press},
     address = {Los Alamitos, CA, USA},
}


@inproceedings{tam_managing_2007,
    author = {Tam, David and Azimi, Reza and Soares, Livio and Stumm, Michael},
    title = {Managing shared l2 caches on multicore systems in software},
    booktitle = {Proceedings of the Workshop on the Interaction between Operating Systems and Computer Architecture},
    series = {WIOSCA'07},
    year = {2007},
}


@article{azimi_enhancing_2009,
    title = {Enhancing Operating System Support for Multicore Processors by Using Hardware Performance Monitoring},
    volume = {43},
    issn = {0163-5980},
    //url = {http://doi.acm.org/10.1145/1531793.1531803},
    //doi = {10.1145/1531793.1531803},
    number = {2},
    urldate = {2014-05-01},
    journal = {{SIGOPS} Oper. Syst. Rev.},
    author = {Azimi, Reza and Tam, David K. and Soares, Livio and Stumm, Michael},
    month = {apr},
    year = {2009},
    pages = {56-65}
}


@inproceedings{lin_gaining_2008,
    title = {Gaining insights into multicore cache partitioning: Bridging the gap between simulation and real systems},
    shorttitle = {Gaining insights into multicore cache partitioning},
    //doi = {10.1109/HPCA.2008.4658653},
    booktitle = {{IEEE} 14th International Symposium on High Performance Computer Architecture, 2008. {HPCA} 2008},
    author = {Lin, Jiang and Lu, Qingda and Ding, Xiaoning and Zhang, Zhao and Zhang, Xiaodong and Sadayappan, P.},
    month = {feb},
    year = {2008},
    keywords = {cache sharing, cache storage, Computational modeling, Computer simulation, dynamic cache partitioning, Hardware, Kernel, memory address mapping, Multicore processing, multicore processor utilization, multiprocessing systems, multi-threading, operating system, operating system kernels, operating systems, optimization, {OS} kernel, qos, quality of service, Runtime, Software performance, {SPEC} {CPU2006} benchmark, static cache partitioning, Yarn},
    pages = {367--378}
}


@inproceedings {Nishtala_2013,
author = {Rajesh Nishtala and Hans Fugal and Steven Grimm and Marc Kwiatkowski and Herman Lee and Harry C. Li and Ryan McElroy and Mike Paleczny and Daniel Peek and Paul Saab and David Stafford and Tony Tung and Venkateshwaran Venkataramani},
title = {Scaling Memcache at Facebook},
booktitle = {Proceedings of the 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI 13)},
year = {2013},
//isbn = {978-1-931971-00-3},
address = {Lombard, IL},
pages = {385--398},
////url = {https://www.usenix.org/conference/nsdi13/technical-sessions/presentation/nishtala},
//publisher = {USENIX},
}


@incollection{mi_software-hardware_2010,
    series = {Lecture Notes in Computer Science},
    title = {Software-Hardware Cooperative {DRAM} Bank Partitioning for Chip Multiprocessors},
    copyright = {?2010 Springer-Verlag Berlin Heidelberg},
    isbn = {978-3-642-15671-7, 978-3-642-15672-4},
    //url = {http://link.springer.com/chapter/10.1007/978-3-642-15672-4_28},
    number = {6289},
    urldate = {2014-05-01},
    booktitle = {Network and Parallel Computing},
    publisher = {Springer Berlin Heidelberg},
    author = {Mi, Wei and Feng, Xiaobing and Xue, Jingling and Jia, Yaocang},
    editor = {Ding, Chen and Shao, Zhiyuan and Zheng, Ran},
    month = {jan},
    year = {2010},
    keywords = {Address Mapping, Algorithm Analysis and Problem Complexity, Cache Locality, Computing Methodologies, operating systems, Programming Techniques, Row Buffer Locality, Software Engineering, Software {Engineering/Programming} and Operating Systems},
    pages = {329--343},
}


@inproceedings{kozyrakis_resource_2013,
    title = {Resource efficient computing for warehouse-scale datacenters},
    //doi = {10.7873/DATE.2013.278},
    booktitle = {Design, Automation Test in Europe Conference Exhibition ({DATE)}, 2013},
    author = {Kozyrakis, Christos},
    month = {mar},
    year = {2013},
    pages = {1351--1356},
}

@inproceedings{Corbato:1962:ETS:1460833.1460871,
 author = {Corbat\'{o}, Fernando J. and Merwin-Daggett, Marjorie and Daley, Robert C.},
 title = {An Experimental Time-sharing System},
 booktitle = {Proceedings of the May 1-3, 1962, Spring Joint Computer Conference},
 series = {AIEE-IRE '62 (Spring)},
 year = {1962},
 location = {San Francisco, California},
 pages = {335--344},
 numpages = {10},
 //url = {http://doi.acm.org/10.1145/1460833.1460871},
 //doi = {10.1145/1460833.1460871},
 acmid = {1460871},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@article{dean_tail_2013,
    title = {The Tail at Scale},
    volume = {56},
    issn = {0001-0782},
    //url = {http://doi.acm.org/10.1145/2408776.2408794},
    //doi = {10.1145/2408776.2408794},
    abstract = {Software techniques that tolerate latency variability are vital to building responsive large-scale Web services.},
    number = {2},
    urldate = {2014-05-02},
    journal = {Communications of the ACM},
    author = {Dean, Jeffrey and Barroso, Luiz Andre},
    month = {feb},
    year = {2013},
    pages = {74-80}
}

@article{Kaplan_utilization_2008,
    title = {Revolutionizing Data Center Energy Efficiency},
    journal = {Technical report, McKinsey \& Company},
    author = {Kaplan, James M  and Forrest, William  and Kindler, Noah},
    year = {2008}
}

@article{21st_architecture,
    title = {{Computing Community Consortium (CCC)}. 21st Century Computer Architecture},
    journal = {A community white paper},
    author = {Computing Community Consortium (CCC)},
    //url = {http://cra.org/ccc/docs/init/21stcenturyarchitecturewhitepaper.pdf},
    year = {2012}
}

@inproceedings{Schwarzkopf_omega_2013,
 author = {Schwarzkopf, Malte and Konwinski, Andy and Abd-El-Malek, Michael and Wilkes, John},
 title = {Omega: Flexible, Scalable Schedulers for Large Compute Clusters},
 booktitle = {Proceedings of the 8th ACM European Conference on Computer Systems},
 series = {EuroSys '13},
 year = {2013},
 isbn = {978-1-4503-1994-2},
 location = {Prague, Czech Republic},
 pages = {351--364},
 numpages = {14},
 //url = {http://doi.acm.org/10.1145/2465351.2465386},
 //doi = {10.1145/2465351.2465386},
 acmid = {2465386},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cluster scheduling, optimistic concurrency control},
}


@inproceedings{Reiss_googletrace_2012,
 author = {Reiss, Charles and Tumanov, Alexey and Ganger, Gregory R. and Katz, Randy H. and Kozuch, Michael A.},
 title = {Heterogeneity and Dynamicity of Clouds at Scale: Google Trace Analysis},
 booktitle = {Proceedings of the Third ACM Symposium on Cloud Computing},
 series = {SoCC '12},
 year = {2012},
 isbn = {978-1-4503-1761-0},
 location = {San Jose, California},
 pages = {7:1--7:13},
 articleno = {7},
 numpages = {13},
 //url = {http://doi.acm.org/10.1145/2391229.2391236},
 //doi = {10.1145/2391229.2391236},
 acmid = {2391236},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Xu:2013:Bobtail:,
 author = {Xu, Yunjing and Musgrave, Zachary and Noble, Brian and Bailey, Michael},
 title = {Bobtail: Avoiding Long Tails in the Cloud},
 booktitle = {Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation},
 series = {NSDI'13},
 year = {2013},
 location = {Lombard, IL},
 pages = {329-342},
 numpages = {14},
 //url = {http://dl.acm.org/citation.cfm?id=2482626.2482658},
 acmid = {2482658},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}


@inproceedings{Kapoor:2012:Chronos,
 author = {Kapoor, Rishi and Porter, George and Tewari, Malveeka and Voelker, Geoffrey M. and Vahdat, Amin},
 title = {Chronos: Predictable Low Latency for Data Center Applications},
 booktitle = {Proceedings of the Third ACM Symposium on Cloud Computing},
 series = {SoCC '12},
 year = {2012},
 isbn = {978-1-4503-1761-0},
 location = {San Jose, California},
 pages = {9:1--9:14},
 articleno = {9},
 numpages = {14},
 //url = {http://doi.acm.org/10.1145/2391229.2391238},
 //doi = {10.1145/2391229.2391238},
 acmid = {2391238},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cloud computing, load balancing, predictable latency, user-level networking},
}


@inproceedings{Xu:2013:SMALL,
 author = {Xu, Yunjing and Bailey, Michael and Noble, Brian and Jahanian, Farnam},
 title = {Small is Better: Avoiding Latency Traps in Virtualized Data Centers},
 booktitle = {Proceedings of the 4th Annual Symposium on Cloud Computing},
 series = {SOCC '13},
 year = {2013},
 isbn = {978-1-4503-2428-1},
 location = {Santa Clara, California},
 pages = {7:1--7:16},
 articleno = {7},
 numpages = {16},
 //url = {http://doi.acm.org/10.1145/2523616.2523620},
 //doi = {10.1145/2523616.2523620},
 acmid = {2523620},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cloud computing, latency, virtualization},
}


@inproceedings{Radhakrishnan:2014:SENIC,
 author = {Radhakrishnan, Sivasankar and Geng, Yilong and Jeyakumar, Vimalkumar and Kabbani, Abdul and Porter, George and Vahdat, Amin},
 title = {SENIC: Scalable NIC for End-host Rate Limiting},
 booktitle = {Proceedings of the 11th USENIX Conference on Networked Systems Design and Implementation},
 series = {NSDI'14},
 year = {2014},
 isbn = {978-1-931971-09-6},
 location = {Seattle, WA},
 pages = {475--488},
 numpages = {14},
 //url = {http://dl.acm.org/citation.cfm?id=2616448.2616492},
 acmid = {2616492},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}


@inproceedings{Hindman:2011:Mesos,
    author = {Hindman, Benjamin and Konwinski, Andy and Zaharia, Matei and Ghodsi, Ali and Joseph, Anthony D. and Katz, Randy and Shenker, Scott and Stoica, Ion},
    title = {Mesos: A Platform for Fine-grained Resource Sharing in the Data Center},
    booktitle = {Proceedings of the 8th USENIX Conference on Networked Systems Design and Implementation},
    series = {NSDI'11},
    year = {2011},
    location = {Boston, MA},
    pages = {22--22},
    numpages = {1},
    //url = {http://dl.acm.org/citation.cfm?id=1972457.1972488},
    acmid = {1972488},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}

@INPROCEEDINGS{Liu:2014:ISCA,
    author = {Liu, Lei and Li, Yong and Cui, Zehan and Bao, Yungang and Chen, Mingyu and Wu, Chengyong},
    title = {Going Vertical in Memory Management: Handling Multiplicity by Multi-policy},
    booktitle = {Proceeding of the 41st Annual International Symposium on Computer Architecuture},
    series = {ISCA '14},
    year = {2014},
    isbn = {978-1-4799-4394-4},
    location = {Minneapolis, Minnesota, USA},
    pages = {169--180},
    numpages = {12},
    //url = {http://dl.acm.org/citation.cfm?id=2665671.2665698},
    acmid = {2665698},
    publisher = {IEEE Press},
    address = {Piscataway, NJ, USA},
} 


@inproceedings{Xiong:2010:OSDI,
 author = {Xiong, Weiwei and Park, Soyeon and Zhang, Jiaqi and Zhou, Yuanyuan and Ma, Zhiqiang},
 title = {Ad Hoc Synchronization Considered Harmful},
 booktitle = {Proceedings of the 9th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'10},
 year = {2010},
 location = {Vancouver, BC, Canada},
 pages = {1--8},
 numpages = {8},
 //url = {http://dl.acm.org/citation.cfm?id=1924943.1924955},
 acmid = {1924955},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}


@inproceedings{Di:2012:CCC,
 author = {Di, Sheng and Kondo, Derrick and Cirne, Walfredo},
 title = {Characterization and Comparison of Cloud Versus Grid Workloads},
 booktitle = {Proceedings of the 2012 IEEE International Conference on Cluster Computing},
 series = {CLUSTER '12},
 year = {2012},
 isbn = {978-0-7695-4807-4},
 pages = {230--238},
 numpages = {9},
 //url = {http://dx.doi.org/10.1109/CLUSTER.2012.35},
 //doi = {10.1109/CLUSTER.2012.35},
 acmid = {2409145},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Load Characterization, Cloud Computing, Grid Computing},
}


@inproceedings{clusterdata:Di2013,
   title = {Characterizing cloud applications on a {Google} data center},
   author = {Di, Sheng and Kondo, Derrick and Franck, Cappello},
   booktitle = {42nd International Conference on Parallel Processing (ICPP)},
   year = 2013,
   month = {Oct},
   address = {Lyon, France},
  }


 @INPROCEEDINGS{clusterdata:Reiss2012b,
   title = {Heterogeneity and dynamicity of clouds at scale:
     {Google} trace analysis},
   author = {Charles Reiss and Alexey Tumanov and Gregory R. Ganger and
     Randy H. Katz and Michael A. Kozuch},
   booktitle = {ACM Symposium on Cloud Computing (SoCC)},
   year = 2012,
   month = {Oct},
   address = {San Jose, CA, USA},
 }

 @INPROCEEDINGS{clusterdata:Liu2012,
   author = {Zitao Liu and Sangyeun Cho},
   title = {Characterizing machines and workloads on a {Google} cluster},
   booktitle = {8th International Workshop on Scheduling and Resource Management
     for Parallel and Distributed Systems (SRMPDS)},
   year = 2012,
   month = {Sep},
   address = {Pittsburgh, PA, USA},
    //url = {http://www.cs.pitt.edu/cast/abstract/liu-srmpds12.html},
 }

 @INPROCEEDINGS{clusterdata:Di2012a,
   author = {Sheng Di and Derrick Kondo and Walfredo Cirne},
   title = {Characterization and comparison of cloud versus {Grid} workloads},
   booktitle = {International Conference on Cluster Computing (IEEE CLUSTER)},
   year = 2012,
   month = {Sep},
   pages = {230--238},
   address = {Beijing, China},
 }

 @Article{clusterdata:Mishra2010,
   author = {Mishra, Asit K. and Hellerstein, Joseph L. and Cirne, Walfredo and
     Das, Chita R.},
   title = {Towards characterizing cloud backend workloads: insights from
     {Google} compute clusters},
   journal = {SIGMETRICS Perform. Eval. Rev.},
   volume = {37},
   number = {4},
   month = {Mar},
   year = 2010,
   issn = {0163-5999},
   pages = {34--41},
   numpages = {8},
   //url = {http://doi.acm.org/10.1145/1773394.1773400},
   //doi = {10.1145/1773394.1773400},
   publisher = {ACM},
 }


 @inproceedings{Dean:2004:OSDI:,
 author = {Dean, Jeffrey and Ghemawat, Sanjay},
 title = {MapReduce: Simplified Data Processing on Large Clusters},
 booktitle = {Proceedings of the 6th Conference on Symposium on Opearting Systems Design \& Implementation - Volume 6},
 series = {OSDI'04},
 year = {2004},
 location = {San Francisco, CA},
 pages = {10--10},
 numpages = {1},
 //url = {http://dl.acm.org/citation.cfm?id=1251254.1251264},
 acmid = {1251264},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}


@inproceedings{patrick_mochel_sysfs_2005,
    title = {The sysfs Filesystem},
    abstract = {sysfs is a feature of the Linux 2.6 kernel that allows kernel code to export information to user processes via an in-memory filesystem. The organization of the filesystem directory hierarchy is strict, and based the internal organization of kernel data structures. The files that are createdin the filesystem are (mostly) {ASCII} files with (usually) one value per file. These features ensure that the information exported is accurateand easily accessible, making sysfs one of themost intuitive and useful features of the 2.6 kernel.},
    booktitle = {Linux Symposium},
    author = {{Patrick Mochel}},
    year = {2005},
    file = {Patrick Mochel - 2005 - The sysfs Filesystem.pdf:F\:\\majiuyue\\Application Data\\Zotero\\Zotero\\Profiles\\pn8lcmdd.default\\zotero\\storage\\NXQDB27R\\Patrick Mochel - 2005 - The sysfs Filesystem.pdf:application/pdf}
}


@inproceedings{rixner_memory_2000,
 author = {Rixner, Scott and Dally, William J. and Kapasi, Ujval J. and Mattson, Peter and Owens, John D.},
 title = {Memory Access Scheduling},
 booktitle = {Proceedings of the 27th Annual International Symposium on Computer Architecture},
 series = {ISCA '00},
 year = {2000},
 isbn = {1-58113-232-8},
 location = {Vancouver, British Columbia, Canada},
 pages = {128--138},
 numpages = {11},
 //url = {http://doi.acm.org/10.1145/339647.339668},
 //doi = {10.1145/339647.339668},
 acmid = {339668},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Ferdman:2012:cloudsuite,
 author = {Ferdman, Michael and Adileh, Almutaz and Kocberber, Onur and Volos, Stavros and Alisafaee, Mohammad and Jevdjic, Djordje and Kaynak, Cansu and Popescu, Adrian Daniel and Ailamaki, Anastasia and Falsafi, Babak},
 title = {Clearing the clouds: a study of emerging scale-out workloads on modern hardware},
 booktitle = {Proceedings of the seventeenth international conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '12},
 year = {2012},
 isbn = {978-1-4503-0759-8},
 location = {London, England, UK},
 pages = {37--48},
 numpages = {12},
 //url = {http://doi.acm.org/10.1145/2150976.2150982},
 //doi = {10.1145/2150976.2150982},
 acmid = {2150982},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {architectural evaluation, cloud computing, design insights, workload characterization},
}


@book{intel_manuals,
    title = {Intel 64 and {IA}-32 Architectures Software Developer Manuals},
    volume = {3: {System} {Programming} {Guide}},
    //url = {http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html},
    abstract = {Downloadable software developer manuals and {CD}-{ROM} resource ordering information for Intel? 64 and {IA}-32 Architectures.},
    urldate = {2014-08-06},
    keywords = {intel 64 architecture, intel ia-32 architecture, software developer manuals},
    file = {Snapshot:F\:\\majiuyue\\Application Data\\Zotero\\Zotero\\Profiles\\pn8lcmdd.default\\zotero\\storage\\BE65F74V\\architectures-software-developer-manuals.html:text/html}
}

@inproceedings{DelimitrouK13:ibench,
  author    = {Christina Delimitrou and
               Christos Kozyrakis},
  title     = {iBench: Quantifying interference for datacenter applications},
  booktitle = {Proceedings of the IEEE International Symposium on Workload Characterization},
  year      = {2013},
  pages     = {23-33},
  ee        = {http://dx.doi.org/10.1109/IISWC.2013.6704667},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@INPROCEEDINGS{Liu:MMCP:ISCA2014,
author={Liu, Lei and Li, Yong and Cui, Zehan and Bao, Yungang and Chen, Mingyu and Wu, Chengyong},
booktitle={Proceedings of the 41st International Symposium on Computer Architecture},
title={Going vertical in memory management: Handling multiplicity by multi-policy},
year={2014},
month={June},
pages={169-180},
keywords={Color;Kernel;Linux;Memory management;Radiation detectors;Random access memory;Resource management},
doi={10.1109/ISCA.2014}
}

@book{IBM_LPAR:2007,
    title = {IBM System i and System p System Planning and Deployment: Simplifying Logical Partitioning},
    author = {Jim Cook and Dale Barrick and Gene Meyer and Marc Rauzier and Chris Shomenta},
    year = {2007},
}

@inproceedings{Rafique:2006:ASO,
 author = {Rafique, Nauman and Lim, Won-Taek and Thottethodi, Mithuna},
 title = {Architectural Support for Operating System-driven CMP Cache Management},
 booktitle = {Proceedings of the 15th International Conference on Parallel Architectures and Compilation Techniques},
 series = {PACT '06},
 year = {2006},
 isbn = {1-59593-264-X},
 location = {Seattle, Washington, USA},
 pages = {2--12},
 numpages = {11},
 //url = {http://doi.acm.org/10.1145/1152154.1152160},
 //doi = {10.1145/1152154.1152160},
 acmid = {1152160},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CMP, OS, QoS, SLAs, cache, fairness, interface, quotas},
}



@inproceedings{wilson_better_2011,
    address = {New York, {NY}, {USA}},
    series = {{SIGCOMM} '11},
    title = {Better Never Than Late: Meeting Deadlines in Datacenter Networks},
    isbn = {978-1-4503-0797-0},
    shorttitle = {Better Never Than Late},
    //url = {http://doi.acm.org/10.1145/2018436.2018443},
    //doi = {10.1145/2018436.2018443},
    urldate = {2014-08-07},
    booktitle = {Proceedings of the {ACM} {SIGCOMM} 2011 Conference},
    publisher = {{ACM}},
    author = {Wilson, Christo and Ballani, Hitesh and Karagiannis, Thomas and Rowtron, Ant},
    year = {2011},
    keywords = {datacenter, deadline, online services, rate control, sla},
}


@inproceedings{alizadeh_data_2010,
    address = {New York, {NY}, {USA}},
    series = {{SIGCOMM} '10},
    title = {Data Center {TCP} ({DCTCP})},
    isbn = {978-1-4503-0201-2},
    //url = {http://doi.acm.org/10.1145/1851182.1851192},
    //doi = {10.1145/1851182.1851192},
    urldate = {2014-08-07},
    booktitle = {Proceedings of the {ACM} {SIGCOMM} 2010 Conference},
    publisher = {{ACM}},
    author = {Alizadeh, Mohammad and Greenberg, Albert and Maltz, David A. and Padhye, Jitendra and Patel, Parveen and Prabhakar, Balaji and Sengupta, Sudipta and Sridharan, Murari},
    year = {2010},
    keywords = {data center network, {ECN}, {TCP}},
}

@inproceedings{vamanan_deadline-aware_2012,
    address = {New York, {NY}, {USA}},
    series = {{SIGCOMM} '12},
    title = {Deadline-aware Datacenter {TCP} (D2TCP)},
    isbn = {978-1-4503-1419-0},
    //url = {http://doi.acm.org/10.1145/2342356.2342388},
    //doi = {10.1145/2342356.2342388},
    urldate = {2014-08-07},
    booktitle = {Proceedings of the {ACM} {SIGCOMM} 2012 Conference},
    publisher = {{ACM}},
    author = {Vamanan, Balajee and Hasan, Jahangir and Vijaykumar, T.N.},
    year = {2012},
    keywords = {cloud services, datacenter, deadline, {ECN}, oldi, sla, {TCP}},
}

@article{zats_detail:_2012,
    title = {{DeTail}: Reducing the Flow Completion Time Tail in Datacenter Networks},
    volume = {42},
    issn = {0146-4833},
    shorttitle = {{DeTail}},
    //url = {http://doi.acm.org/10.1145/2377677.2377711},
    //doi = {10.1145/2377677.2377711},
    number = {4},
    urldate = {2014-08-07},
    journal = {{SIGCOMM} Comput. Commun. Rev.},
    author = {Zats, David and Das, Tathagata and Mohan, Prashanth and Borthakur, Dhruba and Katz, Randy},
    month = {aug},
    year = {2012},
    keywords = {datacenter network, flow statistics, multi-path},
}


@inproceedings{jeyakumar_eyeq:_2013,
    author = {Jeyakumar, Vimalkumar and Alizadeh, Mohammad and Mazi\`{e}res, David and Prabhakar, Balaji and Kim, Changhoon and Greenberg, Albert},
    title = {EyeQ: Practical Network Performance Isolation at the Edge},
    booktitle = {Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation},
    series = {NSDI'13},
    year = {2013},
    location = {Lombard, IL},
    pages = {297--312},
    numpages = {16},
    //url = {http://dl.acm.org/citation.cfm?id=2482626.2482656},
    acmid = {2482656},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}

@article{hong_finishing_2012,
    title = {Finishing Flows Quickly with Preemptive Scheduling},
    volume = {42},
    issn = {0146-4833},
    //url = {http://doi.acm.org/10.1145/2377677.2377710},
    //doi = {10.1145/2377677.2377710},
    number = {4},
    urldate = {2014-08-07},
    journal = {{SIGCOMM} Comput. Commun. Rev.},
    author = {Hong, Chi-Yao and Caesar, Matthew and Godfrey, P. Brighten},
    month = {aug},
    year = {2012},
    keywords = {data center, deadline, flow scheduling},
}


@inproceedings{dong_less_2013,
    address = {Trento, Italy},
    series = {{PVLDB}'13},
    title = {Less is more: selecting sources wisely for integration},
    shorttitle = {Less is more},
    //url = {http://dl.acm.org/citation.cfm?id=2448936.2448938},
    urldate = {2014-08-07},
    booktitle = {Proceedings of the 39th international conference on Very Large Data Bases},
    publisher = {{VLDB} Endowment},
    author = {Dong, Xin Luna and Saha, Barna and Srivastava, Divesh},
    year = {2013},
}


@inproceedings{yu_profiling_2011,
    address = {Berkeley, {CA}, {USA}},
    series = {{NSDI}'11},
    title = {Profiling Network Performance for Multi-tier Data Center Applications},
    //url = {http://dl.acm.org/citation.cfm?id=1972457.1972464},
    urldate = {2014-08-06},
    booktitle = {Proceedings of the 8th {USENIX} Conference on Networked Systems Design and Implementation},
    publisher = {{USENIX} Association},
    author = {Yu, Minlan and Greenberg, Albert and Maltz, Dave and Rexford, Jennifer and Yuan, Lihua and Kandula, Srikanth and Kim, Changhoon},
    year = {2011},
}

@inproceedings{radhakrishnan_senic:_2014,
    address = {Berkeley, {CA}, {USA}},
    series = {{NSDI}'14},
    title = {{SENIC}: Scalable {NIC} for End-host Rate Limiting},
    isbn = {978-1-931971-09-6},
    shorttitle = {{SENIC}},
    //url = {http://dl.acm.org/citation.cfm?id=2616448.2616492},
    urldate = {2014-08-07},
    booktitle = {Proceedings of the 11th {USENIX} Conference on Networked Systems Design and Implementation},
    publisher = {{USENIX} Association},
    author = {Radhakrishnan, Sivasankar and Geng, Yilong and Jeyakumar, Vimalkumar and Kabbani, Abdul and Porter, George and Vahdat, Amin},
    year = {2014},
}

@inproceedings{shieh_sharing_2011,
    author = {Shieh, Alan and Kandula, Srikanth and Greenberg, Albert and Kim, Changhoon and Saha, Bikas},
    title = {Sharing the Data Center Network},
    booktitle = {Proceedings of the 8th USENIX Conference on Networked Systems Design and Implementation},
    series = {NSDI'11},
    year = {2011},
    location = {Boston, MA},
    pages = {309--322},
    numpages = {14},
    //url = {http://dl.acm.org/citation.cfm?id=1972457.1972489},
    acmid = {1972489},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}



@inproceedings{wang_impact_2010,
    address = {Piscataway, {NJ}, {USA}},
    series = {{INFOCOM}'10},
    title = {The Impact of Virtualization on Network Performance of Amazon {EC}2 Data Center},
    isbn = {978-1-4244-5836-3},
    //url = {http://dl.acm.org/citation.cfm?id=1833515.1833691},
    urldate = {2014-08-06},
    booktitle = {Proceedings of the 29th Conference on Information Communications},
    publisher = {{IEEE} Press},
    author = {Wang, Guohui and Ng, T. S. Eugene},
    year = {2010},
    keywords = {cloud service, measurement, networking performance, virtualization},
}

@inproceedings{Tang:2011:ISCA,
 author = {Tang, Lingjia and Mars, Jason and Vachharajani, Neil and Hundt, Robert and Soffa, Mary Lou},
 title = {The Impact of Memory Subsystem Resource Sharing on Datacenter Applications},
 booktitle = {Proceedings of the 38th Annual International Symposium on Computer Architecture},
 series = {ISCA '11},
 year = {2011},
 isbn = {978-1-4503-0472-6},
 location = {San Jose, California, USA},
 pages = {283--294},
 numpages = {12},
 //url = {http://doi.acm.org/10.1145/2000064.2000099},
 //doi = {10.1145/2000064.2000099},
 acmid = {2000099},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {contention, datacenter, multicore, thread scheduling, thread-to-core mapping, workload characterization},
}

@inproceedings{Baumann:2009:BarrelFish,
 author = {Baumann, Andrew and Barham, Paul and Dagand, Pierre-Evariste and Harris, Tim and Isaacs, Rebecca and Peter, Simon and Roscoe, Timothy and Sch\"{u}pbach, Adrian and Singhania, Akhilesh},
 title = {The Multikernel: A New OS Architecture for Scalable Multicore Systems},
 booktitle = {Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {29--44},
 numpages = {16},
 //url = {http://doi.acm.org/10.1145/1629575.1629579},
 //doi = {10.1145/1629575.1629579},
 acmid = {1629579},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {message passing, multicore processors, scalability},
}

@inproceedings{Novakovi:ATC2013,
    author = {Novakovi\'{c}, Dejan and Vasi\'{c}, Nedeljko and Novakovi\'{c}, Stanko and Kosti\'{c}, Dejan and Bianchini, Ricardo},
    title = {DeepDive: Transparently Identifying and Managing Performance Interference in Virtualized Environments},
    booktitle = {Proceedings of the 2013 USENIX Conference on Annual Technical Conference},
    series = {USENIX ATC'13},
    year = {2013},
    location = {San Jose, CA},
    pages = {219--230},
    numpages = {12},
    //url = {http://dl.acm.org/citation.cfm?id=2535461.2535489},
    acmid = {2535489},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
} 

@online{google_trace,
    title = {{Google Cluster workload traces}},
    author = {{Google}},
    url = {http://code.google.com/p/googleclusterdata},
    citedate = {2016-05-13},
}

@online{SDN,
    title = {{Software-Defined Networking (SDN)}},
    author = {{ONF}},
    url = {https://www.opennetworking.org/sdn-resources/sdn-definition/},
    citedate = {2016-05-14},
}

@inproceedings{barham_xen_2003,
    author = {Barham, Paul and Dragovic, Boris and Fraser, Keir and Hand, Steven and Harris, Tim and Ho, Alex and Neugebauer, Rolf and Pratt, Ian and Warfield, Andrew},
    title = {Xen and the Art of Virtualization},
    booktitle = {Proceedings of the Nineteenth ACM Symposium on Operating Systems Principles},
    series = {SOSP '03},
    year = {2003},
    isbn = {1-58113-757-5},
    location = {Bolton Landing, NY, USA},
    pages = {164--177},
    numpages = {14},
    //url = {http://doi.acm.org/10.1145/945445.945462},
    //doi = {10.1145/945445.945462},
    acmid = {945462},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {hypervisors, paravirtualization, virtual machine monitors},
} 
